# Definição dos serviços (contêineres)
services:

  # Serviço da Aplicação (Laravel/PHP)
  app:
    build:
      context: . # Caminho para o Dockerfile do PHP
      dockerfile: docker/php/Dockerfile
    container_name: hospital_app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./src:/var/www/html # Mapeia a pasta 'src' local para dentro do contêiner
      # This line creates a Docker-managed volume for the vendor directory,
      # protecting it from being overwritten by the host mount.
      - /var/www/html/vendor
      # Mapeia o arquivo de configuração do Xdebug para o diretório de configurações do PHP
      - ./docker/php/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
    networks:
      - laravel-network

  # Serviço do Banco de Dados (MariaDB)
  db:
    image: mariadb:10.6 # Imagem oficial do MariaDB
    container_name: hospital_db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: hospital_db
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_USER: laravel_user
      MYSQL_PASSWORD: secret
    volumes:
      - dbdata:/var/lib/mysql # Volume para persistir os dados do banco
    ports:
      - "3307:3306" # Expõe a porta do MariaDB para o seu computador (opcional)
    networks:
      - laravel-network

  # Serviço do Servidor Web (Nginx)
  nginx:
    image: nginx:1.19-alpine
    container_name: hospital_nginx
    restart: unless-stopped
    ports:
      - "8001:80" # Acessaremos nossa aplicação em http://localhost:8001
    volumes:
      - ./src:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - laravel-network

# Definição das redes
networks:
  laravel-network:
    driver: bridge

# Definição dos volumes
volumes:
  dbdata:
    driver: local
